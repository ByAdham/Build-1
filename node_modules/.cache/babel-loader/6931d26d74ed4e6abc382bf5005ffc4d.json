{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/SubmitNewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nexport default function SubmitNewPost() {\n  _s();\n\n  ////STATES\n  //Form data state to store the data before sending it to the API\n  const [postFormData, setPostFormData] = useState({\n    id: '',\n    title: '',\n    description: \"\",\n    date: \"\",\n    imgSrc: \"\",\n    user_id: \"\"\n  }); //Submit event handler\n\n  const onSubmit = function (data, event) {\n    console.log(data); //Update form state\n\n    setPostFormData(data); //Clear the form\n\n    event.target.reset(); //Redirect the user to the posts page showing all posts\n  };\n\n  console.log(postFormData); ////FORM VALIDATION\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); ////SIDE EFFECTS\n  //Send the data to the API\n\n  useEffect(postFormData => {\n    axios.put('https://bw-comake.herokuapp.com/posts', postFormData).then(res => {\n      console.log(res);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(StyledFormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register({\n            required: 'Please choose a title for your post',\n            minLength: {\n              value: 4,\n              message: \"Title can't be shorter than 4 characters\"\n            },\n            maxLength: {\n              value: 25,\n              message: 'Titles cannot be longer than 25 characters'\n            }\n          }),\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Post Title\",\n          children: errors.title && errors.title.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: register({\n            required: 'Please enter a description',\n            maxLength: {\n              value: 25,\n              message: 'Post limit is 250 characters'\n            }\n          }),\n          name: \"description\",\n          type: \"text\",\n          placeholder: \"Tell us what's happening\",\n          children: errors.description && errors.description.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register,\n          name: \"imgSrc\",\n          type: \"file\",\n          accept: \"image/png, image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubmitNewPost, \"4Wfx2PjyeKfbgLP7yYkenEAuVm4=\", false, function () {\n  return [useForm];\n});\n\n_c = SubmitNewPost;\nconst StyledFormWrapper = styled.div`\n    border: green 5px dashed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    form {\n        display: flex;\n        flex-flow: column;\n\n    }\n`;\n_c2 = StyledFormWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubmitNewPost\");\n$RefreshReg$(_c2, \"StyledFormWrapper\");","map":{"version":3,"sources":["/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/SubmitNewPost.js"],"names":["React","useEffect","useState","styled","Button","useForm","axios","SubmitNewPost","postFormData","setPostFormData","id","title","description","date","imgSrc","user_id","onSubmit","data","event","console","log","target","reset","register","handleSubmit","errors","put","then","res","required","minLength","value","message","maxLength","StyledFormWrapper","div"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport styled from 'styled-components';\nimport { Button } from 'reactstrap'; \nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\n\n\nexport default function SubmitNewPost () {\n    ////STATES\n    //Form data state to store the data before sending it to the API\n    const [postFormData, setPostFormData] = useState({\n        id: '',\n        title: '',\n        description: \"\",\n        date: \"\",\n        imgSrc: \"\",\n        user_id: \"\"\n    });\n    \n    \n    //Submit event handler\n    const onSubmit = function (data, event) {\n        console.log(data);\n        \n        //Update form state\n        setPostFormData(data);\n        \n        //Clear the form\n        event.target.reset();\n\n        //Redirect the user to the posts page showing all posts\n    \n    };\n\n    console.log(postFormData);\n    ////FORM VALIDATION\n    const { register, handleSubmit, errors } = useForm();\n\n    ////SIDE EFFECTS\n    //Send the data to the API\n    useEffect((postFormData)=> {\n        axios\n            .put('https://bw-comake.herokuapp.com/posts', postFormData)\n            .then(res => {\n                console.log(res);\n            })\n    });\n\n    return (\n        <StyledFormWrapper>\n        <div className='new-post-form'>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input\n                    ref={register({required: 'Please choose a title for your post', minLength: {value: 4, message: \"Title can't be shorter than 4 characters\"}, maxLength:{value: 25, message: 'Titles cannot be longer than 25 characters'}})}\n                    name='title'\n                    type='text'\n                    placeholder=\"Post Title\"\n                    >\n                        {errors.title && errors.title.message}\n                </input>\n\n                <textarea\n                    ref={register({required: 'Please enter a description', maxLength:{value: 25, message: 'Post limit is 250 characters'}})}\n                    name='description'\n                    type=\"text\"\n                    placeholder=\"Tell us what's happening\"\n                    >\n                        {errors.description && errors.description.message}\n                </textarea>\n\n                <input\n                    ref={register}\n                    name='imgSrc'\n                    type='file'\n                    accept=\"image/png, image/jpeg\"\n                    >\n                </input>\n\n                <Button \n                type='submit'\n                color='primary'>\n                    Submit\n                </Button>\n            </form>\n        </div>\n        </StyledFormWrapper>\n    )\n}\n\nconst StyledFormWrapper = styled.div `\n    border: green 5px dashed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    form {\n        display: flex;\n        flex-flow: column;\n\n    }\n`"]},"metadata":{},"sourceType":"module"}