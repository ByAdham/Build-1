{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Button, Form, Input, FormFeedback, FormGroup } from 'reactstrap';\nimport axios from 'axios';\nexport default function Login() {\n  _s();\n\n  ////FORM STATE\n  // const [initialFormValues, setInitialFormValues] = useState({\n  //     email: '',\n  //     password: '',\n  //     }\n  // )\n  // const [formData, setFormData] = useState(initialFormValues);\n  ////FORM VALIDATION\n  //Extract the useForm hook methods\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    e.target.reset(); // HTML standard reset() function will only reset inputs' value\n  };\n\n  useEffect(async () => {\n    const result = axios.put('./api/formValues.json', result);\n    reset(result); // asynchronously reset your form values\n  }, [reset]);\n  return /*#__PURE__*/_jsxDEV(StyledLogin, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Email\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), errors.email && \"Email is required\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        ref: register({\n          required: 'Please choose a password',\n          minLength: {\n            value: 8,\n            message: 'Min length is 8 characters'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", errors.password.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        color: \"primary\",\n        type: \"submit\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"HD0kMn/kPIKsOI2CsKhmgB6bw4g=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\n;\nconst StyledLogin = styled.div`\ndisplay: flex;\npadding-top: 1%;\nborder: 2px blue dashed;\nflex-flow: column wrap;\njustify-content: center;\nalign-items: center;\nmin-width: 50%;\n\n.button-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-top: 5%;\n    padding-bottom: 5%;\n}\n`;\n_c2 = StyledLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"StyledLogin\");","map":{"version":3,"sources":["/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/Login.js"],"names":["React","useState","useEffect","useForm","styled","Button","Form","Input","FormFeedback","FormGroup","axios","Login","register","handleSubmit","reset","errors","onSubmit","data","e","target","result","put","required","email","minLength","value","message","password","StyledLogin","div"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,YAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,KAAT,GAAkB;AAAA;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CZ,OAAO,EAAzD;;AACA,QAAMa,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7BA,IAAAA,CAAC,CAACC,MAAF,CAASL,KAAT,GAD6B,CACX;AAClB,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMkB,MAAM,GAAGV,KAAK,CACnBW,GADc,CACT,uBADS,EACgBD,MADhB,CAAf;AAEAN,IAAAA,KAAK,CAACM,MAAD,CAAL,CAHkB,CAGH;AAClB,GAJQ,EAIN,CAACN,KAAD,CAJM,CAAT;AAMA,sBAEI,QAAC,WAAD;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA,8BAEQ;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,EAAE,EAAC,OAApC;AAA4C,QAAA,WAAW,EAAC,OAAxD;AAAgE,QAAA,GAAG,EAAEJ,QAAQ,CAAC;AAACU,UAAAA,QAAQ,EAAE;AAAX,SAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,cAFR,EAGSP,MAAM,CAACQ,KAAP,IAAgB,mBAHzB,eAMQ;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,EAAE,EAAC,UAA1C;AAAqD,QAAA,WAAW,EAAC,UAAjE;AAA4E,QAAA,GAAG,EAAEX,QAAQ,CAAC;AAACU,UAAAA,QAAQ,EAAE,0BAAX;AAAuCE,UAAAA,SAAS,EAAE;AAACC,YAAAA,KAAK,EAAE,CAAR;AAAWC,YAAAA,OAAO,EAAE;AAApB;AAAlD,SAAD;AAAzF;AAAA;AAAA;AAAA;AAAA,cANR,EAOSX,MAAM,CAACY,QAAP,iBAAmB;AAAA,wBAAKZ,MAAM,CAACY,QAAP,CAAgBD,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAP5B,eAUQ;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH;;GAzCuBf,K;UAY8BR,O;;;KAZ9BQ,K;AAyCvB;AAED,MAAMiB,WAAW,GAAGxB,MAAM,CAACyB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMD,W","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport {useForm} from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Button, Form, Input, FormFeedback, FormGroup } from 'reactstrap'; \nimport axios from 'axios';\n\n\nexport default function Login () {\n\n    ////FORM STATE\n    // const [initialFormValues, setInitialFormValues] = useState({\n    //     email: '',\n    //     password: '',\n    //     }\n    // )\n    // const [formData, setFormData] = useState(initialFormValues);\n\n    ////FORM VALIDATION\n    //Extract the useForm hook methods\n    const { register, handleSubmit, reset, errors } = useForm();\n    const onSubmit = (data, e) => {\n     e.target.reset(); // HTML standard reset() function will only reset inputs' value\n    };\n  \n    useEffect(async () => {\n        const result = axios\n        .put ('./api/formValues.json', result)\n        reset(result); // asynchronously reset your form values\n    }, [reset])\n\n    return (\n        \n        <StyledLogin>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                    \n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" ref={register({required: true} )}/>\n                    {errors.email && \"Email is required\"} \n                    \n                    \n                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" ref={register({required: 'Please choose a password', minLength: {value: 8, message: 'Min length is 8 characters'} })}/>\n                    {errors.password && <p> {errors.password.message} </p>} \n                    \n                    \n                    <button color='primary' type='submit'> Submit </button>  \n            </form>          \n        </StyledLogin>\n        \n    );\n};\n\nconst StyledLogin = styled.div`\ndisplay: flex;\npadding-top: 1%;\nborder: 2px blue dashed;\nflex-flow: column wrap;\njustify-content: center;\nalign-items: center;\nmin-width: 50%;\n\n.button-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-top: 5%;\n    padding-bottom: 5%;\n}\n`"]},"metadata":{},"sourceType":"module"}