{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Button, Form, Input, FormFeedback, FormGroup } from 'reactstrap';\nimport axios from 'axios';\nexport default function Login() {\n  _s();\n\n  ////FORM STATE\n  const [initialFormValues, setInitialFormValues] = useState({\n    email: '',\n    password: ''\n  });\n  const [formData, setFormData] = useState(initialFormValues); ////FORM VALIDATION\n  //Extract the useForm hook methods\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: {\n      something: \"anything\"\n    }\n  }); //Submit the data to state\n\n  const onSubmit = data => {\n    axios.put('http://wwww.google.com').then(setFormData(initialFormValues));\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(StyledLogin, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          innerRef: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), errors.email && \"Email is required\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        innerRef: register,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          innerRef: register({\n            required: 'Please choose a password',\n            minLength: {\n              value: 8,\n              message: 'Min length is 8 characters'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", errors.password.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        innerRef: register,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"pBl0PLRYscMylGz90rBMk4qbSAM=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\n;\nconst StyledLogin = styled.div`\ndisplay: flex;\npadding-top: 1%;\nborder: 2px blue dashed;\nflex-flow: column wrap;\njustify-content: center;\nalign-items: center;\nmin-width: 50%;\n\n.button-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-top: 5%;\n    padding-bottom: 5%;\n}\n`;\n_c2 = StyledLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"StyledLogin\");","map":{"version":3,"sources":["/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/Login.js"],"names":["React","useState","useForm","styled","Button","Form","Input","FormFeedback","FormGroup","axios","Login","initialFormValues","setInitialFormValues","email","password","formData","setFormData","register","handleSubmit","reset","formState","isSubmitSuccessful","defaultValues","something","onSubmit","data","put","then","console","log","required","errors","minLength","value","message","StyledLogin","div"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Button, Form, Input, FormFeedback, FormGroup } from 'reactstrap'; \nimport axios from 'axios';\n\n\nexport default function Login () {\n\n    ////FORM STATE\n    const [initialFormValues, setInitialFormValues] = useState({\n        email: '',\n        password: '',\n        }\n    )\n    const [formData, setFormData] = useState(initialFormValues);\n\n    ////FORM VALIDATION\n    //Extract the useForm hook methods\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { isSubmitSuccessful }\n      } = useForm({ defaultValues: { something: \"anything\" } });\n      \n    //Submit the data to state\n    const onSubmit = (data) => {\n        axios\n        .put('http://wwww.google.com')\n        .then(setFormData(initialFormValues))\n    }\n\n    console.log(formData);\n\n    return (\n        \n        <StyledLogin>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup>\n                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" innerRef={register({required: true} )}/>\n                    {errors.email && \"Email is required\"}\n                    </FormGroup>\n                    <FormGroup innerRef={register}>\n                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" innerRef={register({required: 'Please choose a password', minLength: {value: 8, message: 'Min length is 8 characters'} })}/>\n                    {errors.password && <p> {errors.password.message} </p>} \n                    </FormGroup >\n                    <FormGroup innerRef={register}>\n                    <Button color='primary' type='submit'> Submit </Button>\n                    </FormGroup>\n            </Form>\n        </StyledLogin>\n        \n    );\n};\n\nconst StyledLogin = styled.div`\ndisplay: flex;\npadding-top: 1%;\nborder: 2px blue dashed;\nflex-flow: column wrap;\njustify-content: center;\nalign-items: center;\nmin-width: 50%;\n\n.button-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-top: 5%;\n    padding-bottom: 5%;\n}\n`"]},"metadata":{},"sourceType":"module"}