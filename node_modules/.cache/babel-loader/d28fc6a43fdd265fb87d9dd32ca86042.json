{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/PostsFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { CardBody, Card, CardTitle, CardText, Button, CardImg } from \"reactstrap\";\nimport Review from './Review';\nexport default function PostsFeed(props) {\n  _s();\n\n  ////SET STATES\n  //Initialize the feed data state\n  const [feedData, setFeedData] = useState([]); ////CREATE ACTIONS. SET THE INITIAL FEED AND CREATE AN EVENT HANDLER FOR REFRESHING THE FEED IN 1 SPOT\n\n  const getFeed = () => {\n    axios.get(\"https://bw-comake.herokuapp.com/posts\").then(res => {\n      setFeedData(res.data);\n    });\n  }; ////SIDE EFFECTS\n  //On any render invoke getFeed\n\n\n  useEffect(() => {\n    getFeed();\n  }, []);\n  console.log(feedData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the neighborhood feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-wrapper\",\n      children: feedData.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardImg, {\n            top: true,\n            width: \"100%\",\n            src: \"{post.imgSrc}\",\n            alt: \"Card image cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              id: \"post-title\",\n              children: [\" \", post.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              id: \"post-description\",\n              children: [\" \", post.description, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostsFeed, \"H/ysDepNyQzRCTC+Gz7s+dMplGw=\");\n\n_c = PostsFeed;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsFeed\");","map":{"version":3,"sources":["/Users/adhamabdelfattah/Documents/Lambda/Build/Front-end/front-end/src/components/PostsFeed.js"],"names":["React","useEffect","useState","styled","axios","CardBody","Card","CardTitle","CardText","Button","CardImg","Review","PostsFeed","props","feedData","setFeedData","getFeed","get","then","res","data","console","log","map","post","title","description"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,MAA7C,EAAqDC,OAArD,QAAmE,YAAnE;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC,CAHsC,CAMtC;;AACA,QAAMc,OAAO,GAAG,MAAM;AAClBZ,IAAAA,KAAK,CACAa,GADL,CACS,uCADT,EAEKC,IAFL,CAEWC,GAAD,IAAS;AACXJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAL,CAAX;AACH,KAJL;AAKH,GAND,CAPsC,CAetC;AACA;;;AACAnB,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKA,QAAQ,CAACS,GAAT,CAAcC,IAAD,IAAU;AACpB,4BACI,QAAC,IAAD;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,GAAG,MAAZ;AAAa,YAAA,KAAK,EAAC,MAAnB;AAA0B,YAAA,GAAG,EAAC,eAA9B;AAA8C,YAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD;AAAA,oCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,YAAd;AAAA,8BAA6BA,IAAI,CAACC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC,kBAAb;AAAA,8BAAkCD,IAAI,CAACE,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAuBH;;GA9CuBd,S;;KAAAA,S;AA8CvB","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {CardBody, Card, CardTitle, CardText, Button, CardImg} from \"reactstrap\";\n\n\nimport Review from './Review'\n\nexport default function PostsFeed (props) {\n    ////SET STATES\n    //Initialize the feed data state\n    const [feedData, setFeedData] = useState([]);\n\n    \n    ////CREATE ACTIONS. SET THE INITIAL FEED AND CREATE AN EVENT HANDLER FOR REFRESHING THE FEED IN 1 SPOT\n    const getFeed = () => {\n        axios\n            .get(\"https://bw-comake.herokuapp.com/posts\")\n            .then((res) => {\n                setFeedData(res.data);\n            })\n    };\n    \n    ////SIDE EFFECTS\n    //On any render invoke getFeed\n    useEffect(()=>{\n        getFeed();\n    }, [])\n\n    console.log(feedData);\n\n    return (\n        <>\n\n            <h1>Welcome to the neighborhood feed</h1>\n            <div className=\"feed-wrapper\">\n                {feedData.map((post) => {\n                    return (\n                        <Card>\n                            <CardImg top width=\"100%\" src=\"{post.imgSrc}\" alt=\"Card image cap\" />\n                            <CardBody>\n                                <CardTitle id=\"post-title\"> {post.title} </CardTitle>\n                                <CardText id=\"post-description\"> {post.description} </CardText>\n                            </CardBody>\n                        </Card>\n                    )\n                })}\n            </div>\n        </>\n     \n        \n           \n        \n    );\n};\n"]},"metadata":{},"sourceType":"module"}